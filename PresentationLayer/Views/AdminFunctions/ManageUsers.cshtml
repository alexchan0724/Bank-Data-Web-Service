@using API_Classes
@model List<UserDataIntermed>
<style>
    .userList ul {
        list-style-type: none;
        padding: 0;
    }

    .userList li {
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid #ccc;
        padding: 10px 0;
    }

    .userDetails {
        flex: 1;
    }

    .userActions {
        display: flex;
        gap: 10px;
    }

        .userActions a {
            padding: 5px 10px;
            text-decoration: none;
            color: white;
            border-radius: 5px;
        }
</style>
<div class="search-section">
    <input type="text" id="searchBox" name="searchString" placeholder="Search by name" />
    <button type="button" id="searchAccountButton" onclick="searchUsers()">Search</button>
</div>
<div class="createUserSection">
    <button type="button" id="createAccountButton" onclick=" loadView('createUser')">Create Account</button>
</div>
@if (!string.IsNullOrEmpty(ViewBag.Message)) // If user has been deleted 
{
    <div>@ViewBag.Message</div>
}
<div class="userList">
    @if (ViewBag.Users != null && ViewBag.Users.Count > 0)
    {
        <ul>
            @foreach (var user in ViewBag.Users)
            {
                <li>
                    <div class="userDetails">
                        Username: @user.username<br />
                        Email: @user.email<br />
                        Address: @user.address<br />
                        Phone: @user.phoneNum<br />
                    </div>
                    <div class="userActions">
                        <button type="button" id="modifyUserButton" onclick="performAuthParameters('@user.username', '@user.password', 0, 'modifyUser')">Modify User Profile</button>
                        <button type="button" id="deleteUser" onclick="loadView('deleteUser','@user.username','POST')">Delete User</button>
                    </div>
                </li>
            }
        </ul>
    }
</div>
