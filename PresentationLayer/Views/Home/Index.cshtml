<!DOCTYPE html>
<html lang="en">
<head>
    <title>DC Assignment 2 </title>
</head>
<body>
    <div id="header">
    </div>
    <div id="main">
    </div>
    <div id="footer">
        <p> Developed by Jin Lee and Alex Chan</p>
    </div>
    <script src="~/js/site.js"></script>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script> // Load the initial view
        window.onload = function () {
            loadView();
        };

        function addNewUser() {
            const username = document.getElementById('Username').value;
            const email = document.getElementById('Email').value;
            const address = document.getElementById('Address').value;
            const phoneNo = document.getElementById('PhoneNo').value;
            const password = document.getElementById('Password').value;
            const fileInput = document.getElementById('fileInput');
            const profilePicture = fileInput.files[0];

            const userData = {
                username: username,
                email: email,
                address: address,
                phoneNum: phoneNo.toString(),
                password: password,
                profilePicture: null,
                isAdmin: parseInt(0)
            };

            if (profilePicture) {
                const reader = new FileReader();
                reader.onloadend = function () // When the file has been read
                {
                    const base64String = reader.result.split(',')[1]; // Strip the URL until it is just the base64String
                    userData.profilePicture = base64String; // Assign base64String to profilePicture string
                    loadView('addNewUser', userData, 'POST')
                };
                reader.readAsDataURL(profilePicture); // read the profilePicture as DataURL
            } else {
                loadView('addNewUser', userData, 'POST')
            }
        }

        function modifyUser() {
            const username = document.getElementById('Username').value;
            const email = document.getElementById('Email').value;
            const address = document.getElementById('Address').value;
            const phoneNo = document.getElementById('PhoneNo').value;
            const password = document.getElementById('Password').value;
            const fileInput = document.getElementById('fileInput');
            const profilePicture = fileInput.files[0];
            const isAdmin = document.getElementById('isAdmin').value;


            const oldUsername = document.getElementById('OldUsername').value;
            const oldEmail = document.getElementById('OldEmail').value;

            // Create userDataIntermed object

            const userData = {
                User: {
                    username: username,
                    email: email,
                    address: address,
                    phoneNum: phoneNo.toString(),
                    password: password,
                    profilePicture: null,
                    isAdmin: parseInt(isAdmin)
                },
                OldEmail: oldEmail,
                OldUsername: oldUsername
            };


            if (profilePicture) {
                const reader = new FileReader();
                reader.onloadend = function () // When the file has been read
                {
                    const base64String = reader.result.split(',')[1]; // Strip the URL until it is just the base64String
                    userData.User.profilePicture = base64String; // Assign base64String to profilePicture string
                    console.log('User modified profile picture');
                    loadView('sendModifyRequest', userData, 'POST')
                };
                reader.readAsDataURL(profilePicture); // read the profilePicture as DataURL
            } else {
                console.log('User did not modify profile picture');
                loadView('sendModifyRequest', userData, 'POST')
            }
        }

        function addNewAccount() {
            const username = document.querySelector('[name="username"]').value;
            const email = document.querySelector('[name="email"]').value;
            const accNum = document.getElementById('AccNum').value;
            const pin = document.getElementById('PIN').value;
            const description = document.getElementById('Description').value;

            const accountData = {
                username: username,
                email: email,
                accountNumber: accNum,
                pin: pin,
                description: description,
                balance: 0
            };
            console.log('Create new account details:', accountData);

            loadView('addNewAccount', accountData, 'POST');
        }

        function transfer() {
            const senderAcctNo = document.querySelector('[name="accNo"]').value;
            const receiverAcctNo = document.getElementById('transferAcctNum').value;
            const amount = document.getElementById('amount').value;
            const description = document.getElementById('description').value;
            const username = document.querySelector('[name="username"]').value;
            
            // First, get the receiver's account details
            getAccount(receiverAcctNo)
                .then(receiverAccount => {
                    if (!receiverAccount) {
                        alert('Failed to retrieve receiver account. Please check the account number and try again.');
                        return;
                    }

                    const transferData = {
                        senderTransaction: {
                            acctNo: parseInt(senderAcctNo),
                            transactionDescription: description,
                            amount: -parseInt(amount), // Negative amount for sender
                            transactionDate: new Date().toISOString() // Convert date to ISO string
                        },
                        receiverTransaction: {
                            acctNo: parseInt(receiverAcctNo),
                            transactionDescription: description,
                            amount: parseInt(amount), // Positive amount for receiver
                            transactionDate: new Date().toISOString()
                        },
                        senderUsername: username
                    };

                    // Call loadView with the transfer data
                    loadView("transfer", transferData, 'POST');
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
        // Separate method that doesn't return a view
        function getAccount(accountNumber) {
            const apiUrl = `account/BankAccount/receiverAcct/${accountNumber}`;

            return fetch(apiUrl, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to retrieve account');
                    }
                    return response.json();
                })
                .catch(error => {
                    console.error('Error:', error);
                    return null;
                });
        }

        // Function called when user clicks search button
        function searchUsers() {
            const searchString = document.getElementById('searchBox').value;
            if (!searchString) {
                alert('Please enter a search term');
                return;
            }
            const apiUrl = `admin/AdminFunctions/searchUsers/${searchString}`;

            return fetch(apiUrl, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to retrieve account');
                    }
                    return response.json();
                })
                .then(users => {
                    console.log('Users found: ', users);
                    loadView('displayUsers', users, 'POST');
                })
                .catch(error => {
                    console.error('Error:', error);
                    return null;
                });
        }

        function filterTransactions()
        {
            const username = document.getElementById('usernameBox').value;
            const minAmount = document.getElementById('minAmountBox').value;
            const maxAmount = document.getElementById('maxAmountBox').value;
            const sortOrder = document.getElementById('sortOrder').value;
            const adminUsername = document.getElementById('adminUsername').value;

            const filterData = {
                username: username || "",
                minAmount: minAmount? parseInt(minAmount) : null,
                maxAmount: maxAmount? parseInt(maxAmount) : null,
                sortOrder: sortOrder || null,
                adminUsername: adminUsername
            };
            loadView('filterTransactions', filterData, 'POST');
        }
    </script>
</body>
</html>